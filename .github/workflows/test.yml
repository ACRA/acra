name: test

on:
  workflow_dispatch:
  pull_request:
  push:
    paths-ignore:
      - 'web/**'

jobs:
  test:

    runs-on: macos-latest
    strategy:
      matrix:
        android: ['16', '19', '21', '26', '29']

    steps:
      - name: Setup Java
        uses: actions/setup-java@v3.4.1
        with:
          distribution: 'adopt'
          java-version: '11'
      - name: Checkout ACRA
        uses: actions/checkout@v3
      - name: Gradle cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}

      - name: load AVD from cache for API ${{ matrix.android }}
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.android }}

      - name: create and cache AVD for API ${{ matrix.android }}
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.android }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: run tests on API ${{ matrix.android }}
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.android }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew connectedCheck --no-daemon
