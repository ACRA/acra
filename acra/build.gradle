apply plugin: 'com.android.library'
apply plugin: 'signing'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'net.researchgate.release'
apply plugin: 'com.jfrog.artifactory'

android {
    compileSdkVersion Integer.parseInt(androidVersion)
    buildToolsVersion '26.0.2'

    lintOptions {
        abortOnError false
    }

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion androidVersion
        versionName version
        consumerProguardFile proguardFile
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_6
        targetCompatibility JavaVersion.VERSION_1_6
    }
}

dependencies {
    compile "com.android.support:support-v4:$supportVersion"
    compile "com.android.support:support-annotations:$supportVersion"
    annotationProcessor project(':annotationprocessor')
    provided project(':annotations')
}

/*
*   How to oss upload:
*
*   Edit or create the file at ~/.gradle/gradle.properties and add
* signing.keyId=<short ID of your key>
* signing.password=<passphrase for your key>
* signing.secretKeyRingFile=<path to your key ring>
*   Optional, depending on upload destination
* ossrhUser=<OSSRH user>
* ossrhPassword=<OSSRH password>
* artifactoryApiKey=<artifactory key>
* artifactoryUser=<jfrog artifactory user>

*   Then run for ossrh upload
* gradlew release
*
*   Or for jfrog oss artifactory
* gradlew artifactoryPublish
*/

release {
    failOnUnversionedFiles = false
    failOnCommitNeeded = true
    tagTemplate = '$name-$version'
    git {
        requireBranch = "master"
    }
}

afterReleaseBuild {
    dependsOn rootProject.closeAndPromoteRepository
}

rootProject.closeRepository {
    dependsOn uploadArchives
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    source += files('build/generated/source/aidl/release') + files('build/generated/source/buildConfig/release') + files('build/generated/source/apt/release')
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

afterEvaluate {
    javadoc.classpath += files(android.libraryVariants.collect { variant ->
        variant.javaCompile.classpath.files
    })
    javadoc.dependsOn generateReleaseSources
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    required { signing.hasProperty('keyId') }
    sign configurations.archives
}

ext.createPom = { pom ->
    pom.project {
        name 'Application Crash Report for Android'
        description 'Publishes a report of an Android application crash to an end point.'
        packaging 'aar'
        url 'http://acra.ch'

        scm {
            connection 'scm:git:https://github.com/ACRA/acra.git'
            developerConnection 'scm:git:git@github.com:ACRA/acra.git'
            url 'https://github.com/ACRA/acra.git'
        }

        licenses {
            license {
                name 'Apache 2'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution 'repo'
            }
        }

        developers {
            developer {
                id = 'kevin.gaudin'
                name = 'Kevin Gaudin'
            }
            developer {
                id = 'william.ferguson'
                name = 'William Ferguson'
            }
            developer {
                id = 'f43nd1r'
                name = 'Lukas Morawietz'
            }
        }
    }
}

install {
    repositories.mavenInstaller {
        createPom(pom)
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { deployment -> signing.signPom(deployment) }
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUser, password: ossrhPassword)
            }
            createPom(pom)
        }
    }
}

nexusStaging {
    username = ossrhUser
    password = ossrhPassword
    packageGroup = group
}

artifactory {
    contextUrl = 'https://oss.jfrog.org/artifactory'
    publish {
        repository {
            repoKey = version.endsWith('SNAPSHOT') ? 'oss-snapshot-local' : 'oss-release-local'
            username = artifactoryUser
            password = artifactoryApiKey
            maven = true
        }
        defaults {
            publishConfigs('archives')
            publishPom = true
            publishIvy = false
        }
    }
    resolve {
        repository {
            repoKey = 'jcenter'
            username = artifactoryUser
            password = artifactoryApiKey
        }
    }
}

artifactoryPublish {
    dependsOn javadocJar
    dependsOn sourcesJar
    dependsOn install
}
